var Request, SessionEndedRequest,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Request = require('./Request');

module.exports = SessionEndedRequest = (function(_super) {
  __extends(SessionEndedRequest, _super);

  function SessionEndedRequest() {
    this.init = __bind(this.init, this);
    return SessionEndedRequest.__super__.constructor.apply(this, arguments);
  }

  SessionEndedRequest.prototype.init = function() {
    this.reason = this.original.request.reason;
    return this.url = "/sessionEnded";
  };

  return SessionEndedRequest;

})(Request);
