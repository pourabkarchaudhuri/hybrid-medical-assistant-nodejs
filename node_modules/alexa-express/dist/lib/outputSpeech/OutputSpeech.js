var OutputSpeech, TypedClass,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

TypedClass = require('../util/TypedClass');

module.exports = OutputSpeech = (function(_super) {
  __extends(OutputSpeech, _super);

  function OutputSpeech(_arg) {
    this.type = _arg.type;
    this.clear();
  }

  OutputSpeech.create = function(opt) {
    return OutputSpeech.__super__.constructor.create.call(this, opt, __dirname);
  };

  return OutputSpeech;

})(TypedClass);
